/**********************************************************************
* 	SA07_Example_Code.sas
*   Samuel T. Croker
*   DESC:     	Builds SAS and R interface via textfile
*				for the Windows platform.  Similar instructions for *NIX.
*   ADAPTATION:	SAS to R to SAS - Phillip R. Holland
*	DEPN:		R Windows Installation 
*				R Packages FORECAST installed
*				Add the path to R to the Windows environment variable PATH
***********************************************************************/


filename congtrez url 
	'http://waterdata.usgs.gov/nwis/uv?cb_00065=on&format=rdb&period=31&site_no=02169810';

data congaree_trez;
	infile congtrez dlm='09'x;
	length agency $10 site $10 obsdatetime 8 stage 8;
	informat obsdatetime anydtdtm16.;
	format obsdatetime datetime28. 
			obsdate mmddyy10.;
	input agency @;  
	if agency ~= 'USGS' then delete;
	input site $ obsdatetime stage;
	obsdate=datepart(obsdatetime);
	obshour=hour(obsdatetime);
run;

proc means data=congaree_trez
	nway
	noprint;
	class agency site obsdate obshour;
	output out=congaree_trez_hourly_avg
		mean(stage)=hourly_mean_stage;
run;
%let rsourcepath=c:\r_out;
data _null_;
	set congaree_trez_hourly_avg;
	/*write out only the hourly data 
		for simplicity - you can make this
		as detailed as you want*/
	file "&rsourcepath.\congaree_trez_hourly.dat";
	put hourly_mean_stage;
run;

data _null_;
    file "&rsourcepath.\tsdiag.r";
    fcst=tranwrd("&rsourcepath\fcst.png",'\','\\');
    diag=tranwrd("&rsourcepath\plot.png",'\','\\');
    spect=tranwrd("&rsourcepath\spect.png",'\','\\');
    acf=tranwrd("&rsourcepath\acf.png",'\','\\');
    pacf=tranwrd("&rsourcepath\pacf.png",'\','\\');

    put "library(forecast)";
    put "cong_trez <- read.table('c:\\r_out\\congaree_trez_hourly.dat')";

    put 'cong_trez.ts <- ts(cong_trez)';
    put 'cong_trez.fit <- arima(cong_trez.ts,order=c(1,1,0))';
    /* redirect graphs to a png file */
    put 'png(filename="' diag '")';
    put 'tsdiag(cong_trez.fit,6)';
    put 'dev.off()';

    put 'cong_trez.fcst<-forecast.Arima(cong_trez.fit)';

    put 'png(filename="' fcst '")';
    put 'plot.forecast(cong_trez.fcst)';
    put 'dev.off()';

    put 'png(filename="' acf '")';
    put 'acf(cong_trez.ts)';
    put 'dev.off()';

    put 'png(filename="' pacf '")';
    put 'pacf(cong_trez.ts)';
    put 'dev.off()';

    put 'png(filename="' spect '")';
    put 'spectrum(cong_trez.ts)';
    put 'dev.off()';
run;



options xwait xsync;

/* three methods: */
/* 1.  Call R directly - Some errors are not reported to log     */
x "'C:\Program Files\R\R-2.7.1\bin\r.exe'  
     --no-save --no-restore <""&rsourcepath\tsdiag.r"">
     ""&rsourcepath\tsdiag.out""";

/* include the R log in the SAS log */

data _null_;
    infile "&rsourcepath\tsdiag.out";
    file log;
    input;
    put 'R LOG: ' _infile_;
run;

/* include the image in the sas output. 
    Specify a file if you are not using autogenerated html output  */
ods html;
data _null_;
    file print;
    put "<IMG SRC='" "&rsourcepath\plot.png" "' border='0'>";
    put "<IMG SRC='" "&rsourcepath\acf.png" "' border='0'>";
    put "<IMG SRC='" "&rsourcepath\pacf.png" "' border='0'>";
    put "<IMG SRC='" "&rsourcepath\spect.png" "' border='0'>";
    put "<IMG SRC='" "&rsourcepath\fcst.png" "' border='0'>";
run;
ods html close;
